<?php

/**
 * @file
 * Unit tests for Field Validation Report module.
 */

class FieldValidationReportTestCase extends DrupalWebTestCase {

  protected $privileged_user;

  /**
   * Return metadata about the test.
   */
  public static function getInfo() {
    return array(
      'name'  => 'Field Validation Report',
      'description' => 'Executes test suite for Field Validation Report module.',
      'group' => 'Field Validation Report',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp(array('field_validation_report', 'field_validation_report_test'));
    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'view field validation report',
      'administer field validation report',
      'bypass node access',
      'administer taxonomy',
    ));
    $this->drupalLogin($this->privileged_user);
  }

  /**
   * Test required field functionality on a node.
   */
  public function testNodeRequiredField() {
    field_create_field(array(
      'field_name' => 'field_my_required_field',
      'type' => 'text',
    ));

    field_create_instance(array(
      'field_name' => 'field_my_required_field',
      'entity_type' => 'node',
      'label' => 'My required field',
      'bundle' => 'page',
      'required' => TRUE,
      'widget' => array(
        'type' => 'textfield',
      ),
    ));

    $langcode = LANGUAGE_NONE;
    $node = $this->drupalCreateNode(array('type' => 'page', 'status' => NODE_PUBLISHED));
    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertText('My required field field is required.');

    $this->drupalPost('node/' . $node->nid . '/edit', array(
      "field_my_required_field[$langcode][0][value]" => $this->randomString(),
    ), t('Save'));
    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertNoText('My required field field is required.');
  }

  /**
   * Test custom field validation functionality on a taxonomy term.
   */
  function testTaxonomyRequiredField() {
    field_create_field(array(
      'field_name' => 'field_my_required_field',
      'type' => 'text',
    ));

    field_create_instance(array(
      'field_name' => 'field_my_required_field',
      'entity_type' => 'taxonomy_term',
      'label' => 'My required field',
      'bundle' => 'tags',
      'required' => TRUE,
      'widget' => array(
        'type' => 'textfield',
      ),
    ));

    $langcode = LANGUAGE_NONE;
    $vocabulary = taxonomy_vocabulary_machine_name_load('tags');
    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'my test tag',
    );
    taxonomy_term_save($term);
    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertText('My required field field is required.');

    $this->drupalPost('taxonomy/term/' . $term->tid . '/edit', array(
      "field_my_required_field[$langcode][0][value]" => $this->randomString(),
    ), t('Save'));
    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertNoText('My required field field is required.');
  }

  /**
   * Test custom field validation functionality on a node.
   */
  function testNodeCustomFieldValidation() {
    field_create_field(array(
      'field_name' => 'field_my_custom_field',
      'type' => 'text',
    ));

    field_create_instance(array(
      'field_name' => 'field_my_custom_field',
      'entity_type' => 'node',
      'label' => 'My custom field',
      'bundle' => 'page',
      'widget' => array(
        'type' => 'textfield',
      ),
    ));

    $langcode = LANGUAGE_NONE;
    $node = $this->drupalCreateNode(array('type' => 'page', 'status' => NODE_PUBLISHED));

    $node->field_my_custom_field[$langcode][0]['value'] = 'my bad value';
    node_save($node);

    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertText('value may not be "my bad value"');
  }

  /**
   * Test custom field validation functionality on a taxonomy term.
   */
  function testTaxonomyCustomFieldValidation() {
    field_create_field(array(
      'field_name' => 'field_my_custom_field',
      'type' => 'text',
    ));

    field_create_instance(array(
      'field_name' => 'field_my_custom_field',
      'entity_type' => 'taxonomy_term',
      'label' => 'My custom field',
      'bundle' => 'tags',
      'widget' => array(
        'type' => 'textfield',
      ),
    ));

    $langcode = LANGUAGE_NONE;
    $vocabulary = taxonomy_vocabulary_machine_name_load('tags');
    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'my test tag',
    );
    $term->field_my_custom_field[$langcode][0]['value'] = 'my bad value';
    taxonomy_term_save($term);

    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertText('value may not be "my bad value"');
  }

  /**
   * Test custom field validation functionality on a custom entity.
   */
  function testCustomEntityCustomFieldValidation() {
    variable_set('field_validation_report_enable_my_custom_entity', 1);
    variable_set('field_validation_report_enable_my_custom_entity__my_custom_entity', 1);

    field_create_field(array(
      'field_name' => 'field_my_custom_field',
      'type' => 'text',
    ));

    field_create_instance(array(
      'field_name' => 'field_my_custom_field',
      'entity_type' => 'my_custom_entity',
      'label' => 'My custom field',
      'bundle' => 'my_custom_entity',
      'widget' => array(
        'type' => 'textfield',
      ),
    ));

    $langcode = LANGUAGE_NONE;
    $entity = entity_create('my_custom_entity', array(
      'title' => t('My new custom entity'),
    ));
    $entity_w = entity_metadata_wrapper('my_custom_entity', $entity);
    $entity_w->field_my_custom_field->set('my bad value');
    $entity_w->save();

    $this->drupalGet('admin/config/system/field-validation-report');
    $this->assertText('My Custom Entity');

    $this->drupalGet('admin/reports/field-validation-report');

    $this->assertText('value may not be "my bad value"');
  }

}